name: Lambda CI/CD

on:
  push:
    branches:
      - '**'
    paths:
      - 'Backend/AeChatLambda/**'
      - '.github/workflows/lambda.yml'
  pull_request:
    paths:
      - 'Backend/AeChatLambda/**'
      - '.github/workflows/lambda.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Backend/AeChatLambda
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Install Amazon.Lambda.Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Package Lambda
        run: dotnet lambda package --configuration Release --framework net8.0 --output-package bin/Release/net8.0/package.zip

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: Backend/AeChatLambda/bin/Release/net8.0/package.zip

  deploy:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && endsWith(github.ref, '/main')) }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-package
          path: Backend/AeChatLambda/bin/Release/net8.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::687908690092:role/Ae.DirectChat
          aws-region: eu-west-1
          role-session-name: github-actions-lambda-deploy

      - name: Update Lambda code
        run: aws lambda update-function-code --function-name AeChat --zip-file fileb://Backend/AeChatLambda/bin/Release/net8.0/package.zip --publish


