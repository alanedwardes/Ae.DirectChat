name: Frontend CI/CD

on:
  push:
    branches:
      - '**'
    paths:
      - 'Frontend/**'
      - '.github/workflows/frontend.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npx webpack

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: Frontend/dist

  deploy:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && endsWith(github.ref, '/main')) }}
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: Frontend
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: Frontend/dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::687908690092:role/Ae.DirectChat
          aws-region: eu-west-1
          role-session-name: github-actions-frontend-deploy

      - name: Deploy files to S3
        run: |
          aws s3 cp dist/bundle.js      s3://ae-chat --acl public-read --cache-control no-cache --content-type application/javascript
          aws s3 cp dist/bundle.js.map  s3://ae-chat --acl public-read --cache-control no-cache --content-type application/json
          aws s3 cp dist/index.html     s3://ae-chat --acl public-read --cache-control no-cache --content-type text/html
          aws s3 cp dist/robots.txt     s3://ae-chat --acl public-read --cache-control no-cache --content-type text/plain
          aws s3 cp dist/style.css      s3://ae-chat --acl public-read --cache-control no-cache --content-type text/css

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "EWRCBA6WPKPM3" \
            --paths "/*"

